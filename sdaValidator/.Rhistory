x <- 1:4
y <- 2:3
x+y
class(x+y)
data<-read.csv(file = "hw_data.csv", header = TRUE, sep = ",")
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
View(data)
View(data)
x=is.na(x = data)
sum(is.na(data[, 1]))
data<-na.omit(data)
View(data)
View(data)
mean(data[,1])
data<-data[data[,1]>31, data[,4]>90]
data<-data[data[,1]>31, , data[,4]>90]
data<-data[data[,1]>31, , data[,4]>90,]
data<-data[data[,1]>31,]
View(data)
View(data)
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-na.omit(data)
data<-data[data[,1]>31,]
data<-data[data[,4]>90,]
mean(data[, 2])
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-data[data[, 5]==6]
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-data[data[, 5]==6]
data<-data[data[, 5]=6]
data<-data[data[, 5]=="6"]
data<-data[data[, 5]==6,]
mean(data[,4])
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-data[data[, 5]==5,]
max(data[,1])
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-na.omit(data)
data<-data[data[, 5]==5,]
max(data[,1])
R.version.string
install.packages("swirl")
library(swirl)
install.packages("swirl", dependencies=TRUE)
library(swirl)
install.packages("evaluate")
library(swirl)
install.packages("swirl", dependencies=TRUE)
library(swirl)
install.packages("swirl", dependencies=TRUE)
install.packages("evaluate")
library(evaluate)
install.packages("swirl", dependencies=TRUE)
library(swirl)
install.packages("testthat")
library(evaluate)
install.packages("testthat")
install.packages("evaluate")
install.packages("evaluate")
install.packages("swirl", dependencies=TRUE)
install.packages("evaluate")
install.packages("swirl")
install.packages("testthat")
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z /my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
clean
siwrl()
swirl()
swirl()
library(swirl)
swirl()
num_vect<-c(0.5 , 55, -10, 6)
bye()
swirl()
source('~/complete.R')
source("complete.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
library(datasets)
data(iris)
library(datasets)
data(iris)
View(iris)
View(iris)
virginica<-iris[, "Species"="virginica"]
virginica<-iris[, ,"Species"="virginica"]
virginica<-iris[, ,iris["Species"="virginica"]]
virginica<-iris[ ,iris["Species"="virginica"]]
?spliy
?split
s<-split(iris, iris$Species,)
s
lapply(s, function(x) colMeans(x))
lapply(s, function(x) colMeans(x[,,]))
lapply(s, function(x) colMeans(x[,]))
lapply(s, function(x) colMeans(x[, c("Length")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
s<-split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
s[1]
s[3]
colMeans(s[3][, c("Sepal.Length")])
x<-s[3]
colMeans(x[, c("Sepal.Length")])
colMean(x[, c("Sepal.Length")])
?colMeans
x<-s[3]
x
colMeans(x[, "Sepal.Length"])
colMeans(x[, 2])
means(x[, 2])
mean(x[, 2])
x
mean(x[, 1])
s<-split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
?colMeans
library(datasets)
data(iris)
s<-split(iris, iris$Species)
library(datasets)
data(iris)
s<-split(iris, iris$Species)
View(iris)
View(iris)
lapply(virginica, function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
,"Sepal.Width"
library(datasets)
data(iris)
s<-split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
library(datasets)
data(iris)
iris
View(iris)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
data(mtcars)
library(datasets)
data(mtcars)
head(mtcars)
View(mtcars)
View(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
debug(ls)
ls
ls
ls
debug(ls)
ls
?debug
exit
0
ls
debug(ls)
ls
library(datasets)
data(mtcars)
Ã¹
sapply(split(mtcars$hp, mtcars$cyl), mean)
res<-sapply(split(mtcars$hp, mtcars$cyl), mean)
res[3]-res[1]
?ls
ls
ls()
debug(ls)
ls()
x<-c(0.052844020601761965, 0.04456469054629314, 0.0521206956364349, 0.04180537611793805, 0.08967177297840279,
0.061647739234521715, 0.038522331848265756, 0.05090463692478808, 0.03962203409439591, 0.05735162840148844,
0.04836852761059418, 0.060631638055994475, 0.05502767441015738, 0.0539756080341699, 0.058643157912985855,
0.04785459029279332, 0.0789871720849506, 0.05453400428059546, 0.05378763207863846, 0.04961018880616869,
0.05255738082540251, 0.056949322629202215, 0.052419642131080635, 0.051868066573948934, 0.05243351731058704,
0.05648499502140003, 0.05636277338717577, 0.04941146881287728, 0.059413200844245895)
avg(x)
mean(x)
U<-mean(x)
D_register<-0.5324
D_answerQuestions<-0.18651
D_saveAnswer<-1.0209
R_saveAnswer=D_saveAnswer/(1-U)
R_asnwerQuestions=D_answerQuestions/(1-U)
R_register=D_register/(1-U)
R_asnwerQuestions
R_register
R_saveAnswer
U
42+5.6666666667*3+5.33333333
42+5.6666666667*3+5.33333333+11+17+6+18+8.5+27+5.6666666667
(42+5.6666666667*3+5.33333333+11+17+6+18+8.5+27+5.6666666667)/27
length(w)
w<-read.csv("sda_validation(workload timestep=10 forecast period=30).csv")
w<-c(1:10)
length(w)
setwd("~/workspace/sdaValidator")
a<-read.csv("monitored_workload.csv")
b<-read.csv("workload_timestep_1.csv")
c<-read.csv("workload_timestep_2.csv")
d<-read.csv("workload_timestep_3.csv")
e<-read.csv("workload_timestep_4.csv")
f<-read.csv("workload_timestep_5.csv")
m<-23
a_bis<-a[1:m, ,]
b_bis<-b[1:m, ,]
c_bis<-c[1:m, ,]
d_bis<-d[1:m, ,]
e_bis<-e[1:m, ,]
f_bis<-f[1:m, ,]
x<-seq(1,m)
matplot(x,cbind(a_bis,b_bis), type="l" ,col=c("blue","red","green"))
matplot(x,cbind(a_bis,c_bis), type="l" ,col=c("blue","red","green"))
matplot(x,cbind(a_bis,d_bis), type="l" ,col=c("blue","red","green"))
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("blue","red","green"))
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("blue","red","yellow"))
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("blue","red","green"))
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("blue","red","pink"))
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("pink","red","yellow"))
plot(a, type="l")
plot(f, type="l")
plot(f, type="l")
plot(a, type="l")
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("pink","red","blue"))
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("tellow","red","blue"))
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("yellow","red","blue"))
matplot(x,cbind(a_bis,f_bis), type="l" ,col=c("black","red","blue"))
